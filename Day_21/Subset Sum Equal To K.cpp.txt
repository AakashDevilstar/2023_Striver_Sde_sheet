#include <bits/stdc++.h> 

bool solve(int n,int k,vector<int>&arr,int i,vector<vector<int>> &dp){
     if(k==0){
        return true;
    }
    if(k<0){
        return false;
    }
    if(i==n){
        return false;
    }
    if(dp[i][k]!=-1){
        return dp[i][k];
    }
    bool ans1=solve(n,k,arr,i+1,dp);
    bool ans2=solve(n,k-arr[i],arr,i+1,dp);
    return dp[i][k]=(ans1 | ans2);
}

bool subsetSumToK(int n, int k, vector<int> &arr) {
    vector<vector<int>> dp(n,vector<int>(k+1,-1));
    return solve(n,k,arr,0,dp);
}