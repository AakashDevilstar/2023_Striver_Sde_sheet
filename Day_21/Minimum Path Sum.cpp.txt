#include <bits/stdc++.h> 

int solve(vector<vector<int>> &dp,int i,int j,vector<vector<int>> &grid,int n,int m){
    if(i>=n || j>=m){
        return 1e9;
    }
    if(i==n-1 && j==m-1){
        return grid[i][j];
    }
    if(dp[i][j]!=-1){
        return dp[i][j];
    }
    int op1=grid[i][j]+solve(dp,i+1,j,grid,n,m);
    int op2=grid[i][j]+solve(dp,i,j+1,grid,n,m);
    return dp[i][j]=min(op1,op2);
}

int minSumPath(vector<vector<int>> &grid) {
    int n=grid.size();
    int m=grid[0].size();
    vector<vector<int>> dp(n,vector<int>(m,-1));
    return solve(dp,0,0,grid,n,m);
}