#include <bits/stdc++.h> 
/**********************************************************

    Following is the Binary Tree Node structure:

    template <typename T>
    class BinaryTreeNode {
        public: 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
                delete left;
            if (right)
                delete right;
        }
    };
***********************************************************/
void inorder(BinaryTreeNode<int> *root,vector<int> &ans){
    if(!root){
        return;
    }
    inorder(root->left,ans);
    ans.push_back(root->data);
    inorder(root->right,ans);
}

bool solve(vector<int> &ans,int k){
    int s=0;
    int e=ans.size()-1;
    while(s<e){
        if(k==ans[s]+ans[e]){
            return true;
        }
        else if(k>ans[s]+ans[e]){
            s++;
        }
        else if(k<ans[s]+ans[e]){
            e--;
        }
    }
    return false;
}

bool pairSumBst(BinaryTreeNode<int> *root, int k){
    vector<int> ans;
    inorder(root,ans);
    if(solve(ans,k)){
        return true;
    }
    return false;
}