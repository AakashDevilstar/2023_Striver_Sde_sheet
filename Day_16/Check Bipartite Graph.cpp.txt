#include<bits/stdc++.h>

bool solve(int curr,vector<int> adj[],vector<int> &color){
	for(auto it:adj[curr]){
		if(color[it]==-1){
			color[it]=1-color[curr];
			if(!solve(it,adj,color)){
				return false;
			}
		}
		else if(color[it]==color[curr]){
			return false;
		}
	}
	return true;
}

bool isGraphBirpatite(vector<vector<int>> &edges) {
	int n=edges.size();
	vector<int> adj[n];
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			if(edges[i][j]){
				adj[i].push_back(j);
				adj[j].push_back(i);
			}
		}
	}
	vector<int> color(n,-1);
	for(int i=0;i<n;i++){
		if(color[i]==-1){
			color[i]=0;
			if(!solve(i,adj,color)){
				return false;
			}
		}
	}
	return true;
}